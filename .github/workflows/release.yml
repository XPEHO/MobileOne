on:
  push:
    tags:
      - '*'

name: Upload Release apk

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Get version from tag name
        run: |
          echo "Running on ${{github.ref}}"
          BUILD_NAME="$(echo ${{github.ref}} | cut -d+ -f1)"
          BUILD_NUMBER="$(echo ${{github.ref}} | cut -d+ -f2)"
      - name: Configure signature
        run: |
          echo "${{secrets.KEY_PROPERTIES}}" > android/key.properties
          echo "${{secrets.RELEASE_KEYSTORE}}" > upload-keystore.encoded
          base64 -d -i upload-keystore.encoded > ./android/app/upload-keystore.jks
      - name: fetch firebase config
        env:
          FIREBASE_CONFIG: ${{ secrets.ANDROID_GOOGLE_SERVICES }}
        run: |
          echo $FIREBASE_CONFIG > ./android/app/google-services.json
      - name: Setup Java 12
        uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - name: Setup flutter action
        uses: subosito/flutter-action@v1
        with:
          flutter-version: '1.17.5'
      - name: Build
        run: |
          flutter pub get
          echo "Building $BUILD_NAME.$BUILD_NUMBER"
          flutter build apk --build-name $BUILD_NAME --build-number $BUILD_NUMBER
      - name: Create Github Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload debug apk
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/app/outputs/apk/release/app-release.apk
          asset_name: app-release.apk
          asset_content_type: application/zip
